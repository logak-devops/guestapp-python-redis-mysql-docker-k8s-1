---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flaskapi-deployment
  labels:
    app: flaskapi-1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: flaskapi-1
  template:
    metadata:
      labels:
        app: flaskapi-1
    spec:
      containers:
        - name: flaskapi-container
          image: klogambigai/guestapp_pythonweb:latest
          imagePullPolicy: Never 
          ports:
            - containerPort: 8000
          env:
            - name: db_root_password
              valueFrom:
                secretKeyRef:
                  name: flaskapi-secrets
                  key: db_root_password
            - name: db_name
              value: flaskapi

---
apiVersion: v1
kind: Service
metadata:
  name: flask-service
spec:
  ports:
  - port: 8000
    protocol: TCP
    targetPort: 8000
    nodePort: 30993
  selector:
    app: flaskapi-1
  type: NodePort



---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:latest
        imagePullPolicy: Never
        
        ports:
        - containerPort: 6379
          name: db-container


---
apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    app: redis
spec:
  ports:
  - port: redis
    targetPort: 6379
    nodePort: 30993
    protocol: TCP
    name: mysql
  selector:
    app: db
  type: NodePort



apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: mysqldb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysqldb
  template:
    metadata:
      labels:
        app: mysqldb
    spec:
      containers:
      - name: mysql
        image: klogambigai/guestapp_mysqldb:latest
        imagePullPolicy: Never
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: flaskapi-secrets
              key: db_root_password
        ports:
        - containerPort: 3306
          name: mysqldb
        volumeMounts:
          - name: mysql-persistent-storage
            mountPath: /var/lib/mysql
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim


---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  labels:
    app: db
spec:
  ports:
  - port: 3306
    targetPort: 3306
    nodePort: 30991
    protocol: TCP
    name: mysql
  selector:
    app: db
  type: NodePort
